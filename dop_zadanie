import math
class Figure:
    sides_count = 0
    def __init__(self, __color:list, *__sides:int):
        self.filled = False
        self.__color = __color
        if self.__is_valid_color(*__color):
            self.__color = list(__color)
        self.__sides = __sides

        if len(__sides) != self.sides_count:
            self.__sides = [1] * self.sides_count
        else:
            if self.__is_valid_sides(*__sides):
                self.__sides = list(__sides)
            else:
                self.__sides = [1] * self.sides_count
         

    def __is_valid_color(self, r, g, b):
        return all(isinstance(i,int) and 0 <= i <= 255 for i in (r, g, b))

    def set_color(self, r, g, b):
        if self.__is_valid_color(r,g,b):
            self.__color = (r,g,b)

    def get_color(self):
        return self.__color

    def __is_valid_sides(self,*new_sides):
        return (all(isinstance(side, int) and side > 0 for side in new_sides)
                and len(new_sides) == self.sides_count)

    def set_sides(self, *new_sides):
        if self.__is_valid_sides(*new_sides):
            self.__sides = list(new_sides)

    def get_sides(self):
        return self.__sides

    def __len__(self):
        return sum(self.__sides)

class Cube(Figure):
    sides_count = 12

    def __init__(self, color, *__sides):
        super().__init__(color, *([__sides[0]] * self.sides_count))

    def get_volume(self):
        return self.get_sides()[0] ** 3

class Circle(Figure):
    sides_count = 1
    def __init__(self, __color, *__sides):
        super().__init__(__color, *__sides)
        self.__radius = __sides[0] / (2*math.pi)

    def get_square(self):
        return math.pi * self.__radius ** 2

class Triangle(Figure):
    sides_count = 3

    def get_square(self):
        a, b, c = self.get_sides()
        p = (a + b + c) / 2
        return math.sqrt(p * (p - a) * (p - b) * (p - c))

# Код для проверки:
circle1 = Circle((200, 200, 100), 10) # (Цвет, стороны)
cube1 = Cube((222, 35, 130), 6)

# Проверка на изменение цветов:
circle1.set_color(55, 66, 77) # Изменится
print(circle1.get_color())
cube1.set_color(300, 70, 15) # Не изменится
print(cube1.get_color())

# Проверка на изменение сторон:
cube1.set_sides(5, 3, 12, 4, 5) # Не изменится
print(cube1.get_sides())

circle1.set_sides(15) # Изменится
print(circle1.get_sides())


# Проверка периметра (круга), это и есть длина:
print(len(circle1))
# Проверка объёма (куба):
print(cube1.get_volume())

